apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    k_appName: "@string/app_name"
            ]
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    k_appName: "@string/app_name_test"
            ]
        }
    }

    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        config {
            keyAlias 'key0'
            keyPassword '070812'
            storeFile file('../testapp.jks')
            storePassword '070812'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (variant.buildType.name.equals('release')) {
                variant.getPackageApplicationProvider().get().outputDirectory = project.file('../apk/')
                variant.getPackageApplicationProvider().get().outputScope.apkDatas.forEach { apkData ->
                    //这个修改输出APK的文件名
                    apkData.outputFileName = variant.applicationId + "_" + variant.flavorName + "_versionName" + variant.versionName + "_versionCode" + variant.versionCode + '_release.apk'
                }
            } else {
                outputFileName = variant.applicationId + "_" + variant.flavorName + "_versionName" + variant.versionName + "_versionCode" + variant.versionCode + "_debug.apk"
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //MVVMHabit
    implementation project(':mvvmhabit')
    //底部tabBar
    implementation 'me.majiajie:pager-bottom-tab-strip:2.3.0X'
}
